//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueDwarf.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ProxyAnalysisLocale {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ProxyAnalysisLocale() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlueDwarf.Resources.Localization.ProxyAnalysisLocale", typeof(ProxyAnalysisLocale).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Let&apos;s got with this.
        /// </summary>
        public static string ApplyButtonText {
            get {
                return ResourceManager.GetString("ApplyButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à I&apos;ll configure it myself, but thanks for the advice.
        /// </summary>
        public static string CancelButtonText {
            get {
                return ResourceManager.GetString("CancelButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your default proxy is.
        /// </summary>
        public static string DefaultProxyPrefix {
            get {
                return ResourceManager.GetString("DefaultProxyPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à :.
        /// </summary>
        public static string DefaultProxySuffix {
            get {
                return ResourceManager.GetString("DefaultProxySuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DNS does not resolve locally.
        /// </summary>
        public static string DnsDoesNotResolveLocally {
            get {
                return ResourceManager.GetString("DnsDoesNotResolveLocally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DNS does not resolve locally sensitive sites.
        /// </summary>
        public static string DnsDoesNotResolveLocallySensitiveSites {
            get {
                return ResourceManager.GetString("DnsDoesNotResolveLocallySensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DNS resolves locally.
        /// </summary>
        public static string DnsResolvesLocally {
            get {
                return ResourceManager.GetString("DnsResolvesLocally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DNS resolves locally sensitive sites.
        /// </summary>
        public static string DnsResolvesLocallySensitiveSites {
            get {
                return ResourceManager.GetString("DnsResolvesLocallySensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your system does not require my services (which is good).
        /// </summary>
        public static string DoesNotRequireProxy {
            get {
                return ResourceManager.GetString("DoesNotRequireProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The proxy allows sensitive sites.
        /// </summary>
        public static string ProxyAllowsSensitiveSites {
            get {
                return ResourceManager.GetString("ProxyAllowsSensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The proxy allows connection to sensitive sites using IP.
        /// </summary>
        public static string ProxyConnectsToSensitiveIPs {
            get {
                return ResourceManager.GetString("ProxyConnectsToSensitiveIPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The proxy does not allow sensitive sites.
        /// </summary>
        public static string ProxyDoesNotAllowSensitiveSites {
            get {
                return ResourceManager.GetString("ProxyDoesNotAllowSensitiveSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The proxy does no allow connection to sensitive sites using IP.
        /// </summary>
        public static string ProxyDoesNotConnectToSensitiveIPs {
            get {
                return ResourceManager.GetString("ProxyDoesNotConnectToSensitiveIPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application can work only with the local proxy.
        /// </summary>
        public static string WorkWithLocalProxy {
            get {
                return ResourceManager.GetString("WorkWithLocalProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sorry, you&apos;ll have to figure out your own solution :&apos;(.
        /// </summary>
        public static string WorkWithSomethingElse {
            get {
                return ResourceManager.GetString("WorkWithSomethingElse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application can work with the local and a remote proxy (not provider).
        /// </summary>
        public static string WorkWithTwoProxy {
            get {
                return ResourceManager.GetString("WorkWithTwoProxy", resourceCulture);
            }
        }
    }
}
